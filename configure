#!/bin/sh

CC=${CC:-clang}

eval set -- "$(getopt -o "hc" --long "help,destdir:,cc:,clean" -n "$0" -- "$@")"
while true ; do
	case "$1" in
		"-h" | "--help" )
			echo "Usage: $0 [OPTIONS]..."
			echo
			echo "Optional arguments:"
			echo "  -h, --help"
			echo "      --destdir=DIR"
			echo "      --cc=CC"
			echo "  -c, --clean"
			exit ;;
		"--destdir" ) DESTDIR=$2 ; shift 2 ;;
		"--cc" ) CC=$2 ; shift 2 ;;
		"-c" | "--clean" )
			if [ -f "build.ninja" ] ; then
				ninja -t clean
				rm build.ninja
			fi
			rm .ninja_log
			exit
			;;
		"--" ) break ;;
	esac
done

SHARE_DIR="$DESTDIR/usr/share/xfce4/panel/plugins"
LIB_DIR="$DESTDIR/usr/lib/xfce4/panel/plugins"

cat > build.ninja << EOF
cc = $CC
cflags = -g -Wall -Wextra
iflags = -fPIC -Iinclude $(pkg-config --cflags libxfce4panel-2.0)
ldflags = -fPIC -shared $(pkg-config --libs libxfce4panel-2.0)

rule cc
 command = \$cc \$cflags \$iflags -c \$in -o \$out

rule ln
 command = \$cc \$cflags \$in \$ldflags -o \$out

rule bin
 command = ld -r -b binary \$in -o \$out

build liblmon.so: ln obj/lmon.o obj/load.o obj/lmon_resource.o
build obj/lmon.o: cc src/lmon.c | include/lmon.h include/lmon_resource.h
build obj/load.o: cc src/load.c | include/lmon.h include/lmon_resource.h
build obj/lmon_resource.o: bin data/lmon.ui data/lmon.css

# sacrilege follows

rule installshare
 command = install -D -m644 -t $SHARE_DIR/ \$in

rule installlib
 command = install -D -m755 -t $LIB_DIR/ \$in

rule uninstall
 command = rm -f \$in

build installshare: installshare data/lmon.desktop
build installlib: installlib liblmon.so
build install: phony installshare installlib
build uninstall: uninstall $SHARE_DIR/lmon.desktop $LIB_DIR/liblmon.so

default liblmon.so
EOF
